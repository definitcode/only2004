[label,burn_bark](obj $bark)
if ($bark = tree_bark) {
} else if ($bark = oak_bark) {
    if (stat_base(firemaking) < 15) {
        mes("You need a firemaking level of 15 to burn this bark.");
        return;
    }
} else if ($bark = willow_bark) {
    if (stat_base(firemaking) < 30) {
        mes("You need a firemaking level of 30 to burn this bark.");
        return;
    }
} else if ($bark = maple_bark) {
    if (stat_base(firemaking) < 45) {
        mes("You need a firemaking level of 45 to burn this bark.");
        return;
    }
} else if ($bark = yew_bark) {
    if (stat_base(firemaking) < 60) {
        mes("You need a firemaking level of 60 to burn this bark.");
        return;
    }
} else if ($bark = magic_bark) {
    if (stat_base(firemaking) < 75) {
        mes("You need a firemaking level of 75 to burn this bark.");
        return;
    }
}
// --- tinderbox detection ---
def_namedobj $tbox = null;
if (inv_total(inv, tinderbox) > 0) {
    $tbox = tinderbox;
} else if (inv_total(inv, hc_tinderbox) > 0) {
    $tbox = hc_tinderbox;
} else if (inv_total(inv, dragon_tinderbox) > 0) {
    $tbox = dragon_tinderbox;
} else if (inv_total(inv, rune_tinderbox) > 0) {
    $tbox = rune_tinderbox;
} else if (inv_total(inv, adamant_tinderbox) > 0) {
    $tbox = adamant_tinderbox;
} else if (inv_total(inv, mithril_tinderbox) > 0) {
    $tbox = mithril_tinderbox;
} else if (inv_total(inv, steel_tinderbox) > 0) {
    $tbox = steel_tinderbox;
} else if (inv_total(inv, iron_tinderbox) > 0) {
    $tbox = iron_tinderbox;
} else if (inv_total(inv, bronze_tinderbox) > 0) {
    $tbox = bronze_tinderbox;
} else if (inv_total(inv, founders_tinderbox) > 0) {
    $tbox = founders_tinderbox;
}

if ($tbox = null) {
    mes("You need a tinderbox to light a fire.");
    return;
}
// --- tinderbox animation selection ---
def_int $random1 = random(2);
def_int $delay = 0;
def_int $formula = calc($random1 + $delay);
def_seq $anim_id = null;
switch_namedobj($tbox){
    case tinderbox : {
        $anim_id = human_createfire;
        $delay = 4;
    }
    case dragon_tinderbox : {
        $anim_id = human_dragoncreatefire;
        $delay = 1;
    }
    case rune_tinderbox : {
        $anim_id = human_runecreatefire;
        $delay = 2;
    }
    case adamant_tinderbox : {
        $anim_id = human_adacreatefire;
        $delay = 3;
    }
    case mithril_tinderbox : {
        $anim_id = human_mithrilcreatefire;
        $delay = 3;
    }
    case steel_tinderbox : {
        $anim_id = human_steelcreatefire;
        $delay = 3;
    }
    case iron_tinderbox : {
        $anim_id = human_ironcreatefire;
        $delay = 4;
    }
    case bronze_tinderbox : {
        $anim_id = human_bronzecreatefire;
        $delay = 4;
    }
    case founders_tinderbox : {
        $anim_id = human_founderscreatefire;
        $delay = 4;
    }
}
if (%founders_transmog = ^transmog_on){
    $anim_id = human_founderscreatefire;
}
def_int $success = add(random(100), stat_base(firemaking));
mes("You attempt to light the bark.");
anim($anim_id, 0);
sound_synth(tinderbox_strike, 0, 0);
p_delay($delay);

if ($success > 150) {
    ~barkburning_success($bark, $tbox, $anim_id);
    return;
} else if ($success > 125) {
    p_delay(3);
    ~barkburning_success($bark, $tbox, $anim_id);
    return;
} else if ($success > 50) {
    p_delay(4);
    ~barkburning_success($bark, $tbox, $anim_id);
    return;
} else {
    mes("The bark fails to catch fire.");
    return;
}

[proc,barkburning_success](obj $bark, namedobj $tbox, seq $anim_id)
def_int $xp_mul = 0;
def_int $exp_raw = 0;
def_int $total_bark = inv_total(inv, $bark);
def_int $bark_burned = 0;
if ($total_bark > 9){
    $bark_burned = 10;
} else {
    $bark_burned = $total_bark;
}

switch_namedobj($tbox){
    case tinderbox : $xp_mul = 1;
    case dragon_tinderbox : $xp_mul = 4;
    case rune_tinderbox : $xp_mul = 3;
    case adamant_tinderbox : $xp_mul = 2;
    case mithril_tinderbox : $xp_mul = 2;
    case steel_tinderbox : $xp_mul = 1;
    case iron_tinderbox : $xp_mul = 1;
    case bronze_tinderbox : $xp_mul = 1;
    case founders_tinderbox : $xp_mul = 1;
}
switch_obj($bark){
    case tree_bark : {
        $exp_raw = 40;
        %tree_bark_burned = calc(%tree_bark_burned + 1);
    }
    case oak_bark : {
        $exp_raw = 60;
        %oak_bark_burned = calc(%oak_bark_burned + 1);
    }
    case willow_bark : {
        $exp_raw = 90;
        %willow_bark_burned = calc(%willow_bark_burned + 1);
    }
    case maple_bark : {
        $exp_raw = 135;
        %maple_bark_burned = calc(%maple_bark_burned + 1);
    }
    case yew_bark : {
        $exp_raw = 202;
        %yew_bark_burned = calc(%yew_bark_burned + 1);
    }
    case magic_bark : {
        $exp_raw = 303;
        %magic_bark_burned = calc(%magic_bark_burned + 1);
    }
    case cursed_bark : {
        $exp_raw = 408;
        %cursed_bark_burned = calc(%cursed_bark_burned + 1);
    }
}
def_int $calced_exp = multiply($xp_mul, $exp_raw);
def_int $total_exp = multiply($calced_exp, $bark_burned);

inv_del(inv, $bark, $bark_burned);
stat_advance(firemaking, $total_exp);
if (inv_total(worn, cavalier_brown) > 0) {
            stat_advance(firemaking,$total_exp);
            mes("Your firemaking skills are showing!");
}

sound_synth(fire_lit, 0, 0);
//mes("<tostring(map_clock)>, <tostring(%action_delay)>: The fire catches and the bark begin to burn.");
mes("The fire catches the bark, and it begins to burn.");
if (inv_total(inv, $bark) = 0){
    ~clearallq;
    return;
}
def_coord $player_coord = coord;
queue(burn_bark_repeat, 3, $bark, loc_coord, loc_type, $player_coord);

[queue,burn_bark_repeat](obj $bark, coord $loc_coord, loc $loc, coord $player_coord)
def_coord $player_cord2 = coord;
if ($player_coord ! $player_cord2){
    mes("You need a fire source to add these too.");
    clearqueue(burn_bark_repeat);
    ~clearallq;
    return;
} 
if (inv_total(inv, $bark) < 1 & busy2 = true) {
    ~clearallq;
    clearqueue(burn_bark_repeat);
    return;
}
if (loc_find($loc_coord, $loc) = true){
    @burn_bark($bark);
}
