[oplocu,spinning_wheel]
switch_obj (last_useitem) 
{
    case wool : @craft_spinning(last_useitem);
    case flax :
        if (map_members = false) {
            mes(^mes_members_feature);
            return;
        }
        @craft_spinning(last_useitem);
    case ball_of_wool : ~objbox(ball_of_wool, "You have already spun this wool.", 250, 0, divide(^objbox_height, 2));
    case bow_string : ~objbox(bow_string, "You have already spun this bow string.", 250, 0, divide(^objbox_height, 2));
    case default : ~displaymessage(^dm_default);
};

[label,craft_spinning](obj $spinning_obj)
if (getqueue(spinning_repeat) > 0) {
    clearqueue(spinning_repeat);
}
def_struct $struct = oc_param($spinning_obj, crafting_spinning_struct);
// check if we have the required level
def_int $level = struct_param($struct, levelrequire);
if (stat(crafting) < $level) {
    ~mesbox("You need level <tostring($level)> Crafting to make that.");
    return;
}
// play human animation
anim(human_spinningwheel, 0);
loc_anim(spinningwheel);
// if sound is found, play here
inv_del(inv, struct_param($struct, ingredient), 1);
inv_add(inv, struct_param($struct, product), 1);
mes(struct_param($struct, processmessage));
stat_advance(crafting, struct_param($struct, productexp));
if (inv_total(worn, brown_apron) > 0) {
    stat_advance(crafting, struct_param($struct, productexp));
    mes("Your crafting skills are showing!");
}
// p_delay(3);
queue(spinning_repeat, 3, $spinning_obj, loc_coord, loc_type);
//weakqueue(crafting_spinning, 2, $struct);

[queue,spinning_repeat](obj $spinning_obj, coord $coord, loc $loc)
if (inv_total(inv, $spinning_obj) > 0 & loc_find($coord, $loc) = true & busy2 = false) {
    @craft_spinning($spinning_obj);
}